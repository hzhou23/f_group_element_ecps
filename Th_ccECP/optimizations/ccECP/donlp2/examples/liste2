antenna1.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
fmincon_test.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs101.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs102.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs103.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs114_bloc.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs114_blocd1.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs114_blocd2.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs114_blocd3.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs114_new.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs114_new.c:           grad[k][i+shift] = 0.e0;
hs114_new.c:        grad[1][i+shift] = 1.12e0+.13167e0*x[8]-.00667e0*pow(x[8],2);
hs114_new.c:        grad[4][i+shift] = -a;
hs114_new.c:        grad[8][i+shift] = .13167e0*x[1]-.01334e0*x[1]*x[8];
hs114_new.c:        grad[1][i+shift] = -(1.12e0+.13167e0*x[8]-.00667e0*pow(x[8],2));
hs114_new.c:        grad[8][i+shift] = -(.13167e0*x[1]-.01334e0*x[1]*x[8]);
hs114_new.c:        grad[4][i+shift] = 1.0/a;
hs114_new.c:        grad[6][i+shift] = .325e0;
hs114_new.c:        grad[7][i+shift] = -a;
hs114_new.c:        grad[8][i+shift] = 1.098e0-.076e0*x[8];
hs114_new.c:        grad[6][i+shift] = -.325e0;
hs114_new.c:        grad[7][i+shift] = 1.0/a;
hs114_new.c:        grad[8][i+shift] = -(1.098e0-.076e0*x[8]);
hs114_new.c:        grad[3][i+shift] = t-1.e3*t1;
hs114_new.c:        grad[4][i+shift] = -x[9]*t1;
hs114_new.c:        grad[9][i+shift] = -x[4]*t1;
hs114_new.c:        grad[6][i+shift] = -1.e0;
hs114_new.c:        grad[1][i+shift] = -(x[2]+x[5])/pow(x[1],2);
hs114_new.c:        grad[2][i+shift] = 1.e0/x[1];
hs114_new.c:        grad[5][i+shift] = 1.e0/x[1];
hs114_new.c:        grad[8][i+shift] = -1.e0;
hs114_scal.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs114_scal.c:           grad[k][i+shift] = 0.e0;
hs114_scal.c:        grad[1][i+shift] = 1.12e0+.13167e0*x[8]-.00667e0*pow(x[8],2);
hs114_scal.c:        grad[4][i+shift] = -a;
hs114_scal.c:        grad[8][i+shift] = .13167e0*x[1]-.01334e0*x[1]*x[8];
hs114_scal.c:        grad[1][i+shift] = -(1.12e0+.13167e0*x[8]-.00667e0*pow(x[8],2));
hs114_scal.c:        grad[8][i+shift] = -(.13167e0*x[1]-.01334e0*x[1]*x[8]);
hs114_scal.c:        grad[4][i+shift] = 1.0/a;
hs114_scal.c:        grad[6][i+shift] = .325e0;
hs114_scal.c:        grad[7][i+shift] = -a;
hs114_scal.c:        grad[8][i+shift] = 1.098e0-.076e0*x[8];
hs114_scal.c:        grad[6][i+shift] = -.325e0;
hs114_scal.c:        grad[7][i+shift] = 1.0/a;
hs114_scal.c:        grad[8][i+shift] = -(1.098e0-.076e0*x[8]);
hs114_scal.c:        grad[3][i+shift] = t-1.e3*t1;
hs114_scal.c:        grad[4][i+shift] = -x[9]*t1;
hs114_scal.c:        grad[9][i+shift] = -x[4]*t1;
hs114_scal.c:        grad[6][i+shift] = -1.e0;
hs114_scal.c:        grad[1][i+shift] = -(x[2]+x[5])/pow(x[1],2);
hs114_scal.c:        grad[2][i+shift] = 1.e0/x[1];
hs114_scal.c:        grad[5][i+shift] = 1.e0/x[1];
hs114_scal.c:        grad[8][i+shift] = -1.e0;
hs114numdif1.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs114numdif1.c:           grad[k][i+shift] = 0.e0;
hs114numdif1.c:        grad[1][i+shift] = 1.12e0+.13167e0*x[8]-.00667e0*pow(x[8],2);
hs114numdif1.c:        grad[4][i+shift] = -a;
hs114numdif1.c:        grad[8][i+shift] = .13167e0*x[1]-.01334e0*x[1]*x[8];
hs114numdif1.c:        grad[1][i+shift] = -(1.12e0+.13167e0*x[8]-.00667e0*pow(x[8],2));
hs114numdif1.c:        grad[8][i+shift] = -(.13167e0*x[1]-.01334e0*x[1]*x[8]);
hs114numdif1.c:        grad[4][i+shift] = 1.0/a;
hs114numdif1.c:        grad[6][i+shift] = .325e0;
hs114numdif1.c:        grad[7][i+shift] = -a;
hs114numdif1.c:        grad[8][i+shift] = 1.098e0-.076e0*x[8];
hs114numdif1.c:        grad[6][i+shift] = -.325e0;
hs114numdif1.c:        grad[7][i+shift] = 1.0/a;
hs114numdif1.c:        grad[8][i+shift] = -(1.098e0-.076e0*x[8]);
hs114numdif1.c:        grad[3][i+shift] = t-1.e3*t1;
hs114numdif1.c:        grad[4][i+shift] = -x[9]*t1;
hs114numdif1.c:        grad[9][i+shift] = -x[4]*t1;
hs114numdif1.c:        grad[6][i+shift] = -1.e0;
hs114numdif1.c:        grad[1][i+shift] = -(x[2]+x[5])/pow(x[1],2);
hs114numdif1.c:        grad[2][i+shift] = 1.e0/x[1];
hs114numdif1.c:        grad[5][i+shift] = 1.e0/x[1];
hs114numdif1.c:        grad[8][i+shift] = -1.e0;
hs114numdif2.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs114numdif2.c:           grad[k][i+shift] = 0.e0;
hs114numdif2.c:        grad[1][i+shift] = 1.12e0+.13167e0*x[8]-.00667e0*pow(x[8],2);
hs114numdif2.c:        grad[4][i+shift] = -a;
hs114numdif2.c:        grad[8][i+shift] = .13167e0*x[1]-.01334e0*x[1]*x[8];
hs114numdif2.c:        grad[1][i+shift] = -(1.12e0+.13167e0*x[8]-.00667e0*pow(x[8],2));
hs114numdif2.c:        grad[8][i+shift] = -(.13167e0*x[1]-.01334e0*x[1]*x[8]);
hs114numdif2.c:        grad[4][i+shift] = 1.0/a;
hs114numdif2.c:        grad[6][i+shift] = .325e0;
hs114numdif2.c:        grad[7][i+shift] = -a;
hs114numdif2.c:        grad[8][i+shift] = 1.098e0-.076e0*x[8];
hs114numdif2.c:        grad[6][i+shift] = -.325e0;
hs114numdif2.c:        grad[7][i+shift] = 1.0/a;
hs114numdif2.c:        grad[8][i+shift] = -(1.098e0-.076e0*x[8]);
hs114numdif2.c:        grad[3][i+shift] = t-1.e3*t1;
hs114numdif2.c:        grad[4][i+shift] = -x[9]*t1;
hs114numdif2.c:        grad[9][i+shift] = -x[4]*t1;
hs114numdif2.c:        grad[6][i+shift] = -1.e0;
hs114numdif2.c:        grad[1][i+shift] = -(x[2]+x[5])/pow(x[1],2);
hs114numdif2.c:        grad[2][i+shift] = 1.e0/x[1];
hs114numdif2.c:        grad[5][i+shift] = 1.e0/x[1];
hs114numdif2.c:        grad[8][i+shift] = -1.e0;
hs114numdif3.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
hs114numdif3.c:           grad[k][i+shift] = 0.e0;
hs114numdif3.c:        grad[1][i+shift] = 1.12e0+.13167e0*x[8]-.00667e0*pow(x[8],2);
hs114numdif3.c:        grad[4][i+shift] = -a;
hs114numdif3.c:        grad[8][i+shift] = .13167e0*x[1]-.01334e0*x[1]*x[8];
hs114numdif3.c:        grad[1][i+shift] = -(1.12e0+.13167e0*x[8]-.00667e0*pow(x[8],2));
hs114numdif3.c:        grad[8][i+shift] = -(.13167e0*x[1]-.01334e0*x[1]*x[8]);
hs114numdif3.c:        grad[4][i+shift] = 1.0/a;
hs114numdif3.c:        grad[6][i+shift] = .325e0;
hs114numdif3.c:        grad[7][i+shift] = -a;
hs114numdif3.c:        grad[8][i+shift] = 1.098e0-.076e0*x[8];
hs114numdif3.c:        grad[6][i+shift] = -.325e0;
hs114numdif3.c:        grad[7][i+shift] = 1.0/a;
hs114numdif3.c:        grad[8][i+shift] = -(1.098e0-.076e0*x[8]);
hs114numdif3.c:        grad[3][i+shift] = t-1.e3*t1;
hs114numdif3.c:        grad[4][i+shift] = -x[9]*t1;
hs114numdif3.c:        grad[9][i+shift] = -x[4]*t1;
hs114numdif3.c:        grad[6][i+shift] = -1.e0;
hs114numdif3.c:        grad[1][i+shift] = -(x[2]+x[5])/pow(x[1],2);
hs114numdif3.c:        grad[2][i+shift] = 1.e0/x[1];
hs114numdif3.c:        grad[5][i+shift] = 1.e0/x[1];
hs114numdif3.c:        grad[8][i+shift] = -1.e0;
klaernerproblem.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
portfol1.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
portfol2.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
simple.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
simple2.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
weaponas.c:void econgrad(INTEGER liste[] ,INTEGER shift ,  DOUBLE x[],
